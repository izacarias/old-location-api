// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * ETSI GS MEC 013 - Location API
 *
 * The ETSI MEC ISG MEC013 Location API described using OpenAPI.
 *
 * API version: 3.1.1
 */

package location-api


import (
	"fmt"
)


// LocationEventType : This type represents specified event types for UE location report.
type LocationEventType string

// List of LocationEventType
const (
	ENTERING_AREA_EVENT LocationEventType = "ENTERING_AREA_EVENT"
	LEAVING_AREA_EVENT LocationEventType = "LEAVING_AREA_EVENT"
)

// AllowedLocationEventTypeEnumValues is all the allowed values of LocationEventType enum
var AllowedLocationEventTypeEnumValues = []LocationEventType{
	"ENTERING_AREA_EVENT",
	"LEAVING_AREA_EVENT",
}

// validLocationEventTypeEnumValue provides a map of LocationEventTypes for fast verification of use input
var validLocationEventTypeEnumValues = map[LocationEventType]struct{}{
	"ENTERING_AREA_EVENT": {},
	"LEAVING_AREA_EVENT": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LocationEventType) IsValid() bool {
	_, ok := validLocationEventTypeEnumValues[v]
	return ok
}

// NewLocationEventTypeFromValue returns a pointer to a valid LocationEventType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLocationEventTypeFromValue(v string) (LocationEventType, error) {
	ev := LocationEventType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for LocationEventType: valid values are %v", v, AllowedLocationEventTypeEnumValues)
}



// AssertLocationEventTypeRequired checks if the required fields are not zero-ed
func AssertLocationEventTypeRequired(obj LocationEventType) error {
	return nil
}

// AssertLocationEventTypeConstraints checks if the values respects the defined constraints
func AssertLocationEventTypeConstraints(obj LocationEventType) error {
	return nil
}
