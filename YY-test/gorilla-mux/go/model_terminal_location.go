// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * ETSI GS MEC 013 - Location API
 *
 * The ETSI MEC ISG MEC013 Location API described using OpenAPI.
 *
 * API version: 3.1.1
 */

package location-api




// TerminalLocation - A type containing device address, retrieval status and location information.
type TerminalLocation struct {

	// Address of the terminal to which the location information applies (e.g., 'sip' URI, 'tel' URI, 'acr' URI).
	Address string `json:"address"`

	CurrentLocation LocationInfo `json:"currentLocation,omitempty"`

	ErrorInformation ServiceError `json:"errorInformation,omitempty"`

	LocationRetrievalStatus RetrievalStatus `json:"locationRetrievalStatus"`
}

// AssertTerminalLocationRequired checks if the required fields are not zero-ed
func AssertTerminalLocationRequired(obj TerminalLocation) error {
	elements := map[string]interface{}{
		"address": obj.Address,
		"locationRetrievalStatus": obj.LocationRetrievalStatus,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertLocationInfoRequired(obj.CurrentLocation); err != nil {
		return err
	}
	if err := AssertServiceErrorRequired(obj.ErrorInformation); err != nil {
		return err
	}
	return nil
}

// AssertTerminalLocationConstraints checks if the values respects the defined constraints
func AssertTerminalLocationConstraints(obj TerminalLocation) error {
	if err := AssertLocationInfoConstraints(obj.CurrentLocation); err != nil {
		return err
	}
	if err := AssertServiceErrorConstraints(obj.ErrorInformation); err != nil {
		return err
	}
	return nil
}
