// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * ETSI GS MEC 013 - Location API
 *
 * The ETSI MEC ISG MEC013 Location API described using OpenAPI.
 *
 * API version: 3.1.1
 */

package location-api


import (
	"fmt"
)


// NotificationResult : This enumeration represents the result of a localization associated with a notification
type NotificationResult string

// List of NotificationResult
const (
	SUCCESS NotificationResult = "SUCCESS"
	ABNORMAL NotificationResult = "ABNORMAL"
)

// AllowedNotificationResultEnumValues is all the allowed values of NotificationResult enum
var AllowedNotificationResultEnumValues = []NotificationResult{
	"SUCCESS",
	"ABNORMAL",
}

// validNotificationResultEnumValue provides a map of NotificationResults for fast verification of use input
var validNotificationResultEnumValues = map[NotificationResult]struct{}{
	"SUCCESS": {},
	"ABNORMAL": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NotificationResult) IsValid() bool {
	_, ok := validNotificationResultEnumValues[v]
	return ok
}

// NewNotificationResultFromValue returns a pointer to a valid NotificationResult
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNotificationResultFromValue(v string) (NotificationResult, error) {
	ev := NotificationResult(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for NotificationResult: valid values are %v", v, AllowedNotificationResultEnumValues)
}



// AssertNotificationResultRequired checks if the required fields are not zero-ed
func AssertNotificationResultRequired(obj NotificationResult) error {
	return nil
}

// AssertNotificationResultConstraints checks if the values respects the defined constraints
func AssertNotificationResultConstraints(obj NotificationResult) error {
	return nil
}
