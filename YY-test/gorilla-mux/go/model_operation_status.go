// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * ETSI GS MEC 013 - Location API
 *
 * The ETSI MEC ISG MEC013 Location API described using OpenAPI.
 *
 * API version: 3.1.1
 */

package location-api


import (
	"fmt"
)


// OperationStatus : An enumeration defining the operations status of an access point.
type OperationStatus string

// List of OperationStatus
const (
	SERVICEABLE OperationStatus = "Serviceable"
	UNSERVICEABLE OperationStatus = "Unserviceable"
	UNKNOWN OperationStatus = "Unknown"
)

// AllowedOperationStatusEnumValues is all the allowed values of OperationStatus enum
var AllowedOperationStatusEnumValues = []OperationStatus{
	"Serviceable",
	"Unserviceable",
	"Unknown",
}

// validOperationStatusEnumValue provides a map of OperationStatuss for fast verification of use input
var validOperationStatusEnumValues = map[OperationStatus]struct{}{
	"Serviceable": {},
	"Unserviceable": {},
	"Unknown": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OperationStatus) IsValid() bool {
	_, ok := validOperationStatusEnumValues[v]
	return ok
}

// NewOperationStatusFromValue returns a pointer to a valid OperationStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOperationStatusFromValue(v string) (OperationStatus, error) {
	ev := OperationStatus(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for OperationStatus: valid values are %v", v, AllowedOperationStatusEnumValues)
}



// AssertOperationStatusRequired checks if the required fields are not zero-ed
func AssertOperationStatusRequired(obj OperationStatus) error {
	return nil
}

// AssertOperationStatusConstraints checks if the values respects the defined constraints
func AssertOperationStatusConstraints(obj OperationStatus) error {
	return nil
}
