openapi: 3.0.3
info:
  contact:
    url: https://forge.etsi.org/rep/mec/gs013-location-api
  description: The ETSI MEC ISG MEC013 Location API described using OpenAPI.
  license:
    name: BSD-3-Clause
    url: https://forge.etsi.org/legal-matters
  title: ETSI GS MEC 013 - Location API
  version: 3.1.1
externalDocs:
  description: ETSI MEC013 V3.1.1 Location API
  url: https://www.etsi.org/deliver/etsi_gs/MEC/001_099/013/03.01.01_60/gs_mec013v030101p.pdf
servers:
- url: https://localhost/location/v2
tags:
- name: location
paths:
  /queries/distance:
    get:
      description: The GET method is used to query information about distance from
        a user to a location or between two users.
      operationId: distanceGET
      parameters:
      - description: One or two addresses of user to check. The second "address" parameter
          shall not be included when the distance between a user and a location is
          requested. The second "address" parameter shall be included when a location
          is not provided.
        explode: true
        in: query
        name: address
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-exportParamName: Address
      - description: Shall not be included when the distance between two terminals
          is requested.
        explode: true
        in: query
        name: location
        required: false
        schema:
          $ref: '#/components/schemas/distanceGET_location_parameter'
        style: form
        x-exportParamName: Location
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distanceGET_200_response'
          description: "Upon success, a response body containing the list of distance\
            \ information is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Query information about distance from a user to a location or between
        two users
      tags:
      - location
      x-swagger-router-controller: queries
  /queries/users:
    get:
      description: The GET method is used to query location information about a specific
        UE or a group of Ues.
      operationId: usersGET
      parameters:
      - description: Identifier of zone
        explode: true
        in: query
        name: zoneId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-exportParamName: ZoneId
      - description: Identifier of access point
        explode: true
        in: query
        name: accessPointId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-exportParamName: AccessPointId
      - description: "Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI)."
        explode: true
        in: query
        name: address
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-exportParamName: Address_3
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersGET_200_response'
          description: "Upon success, a response body containing the list of user\
            \ location information is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Query location information about a specific UE or a group of Ues
      tags:
      - location
      x-swagger-router-controller: queries
  /queries/zones:
    get:
      description: The GET method is used to query the information about one or more
        specific zones or a list of zones.
      operationId: zonesGET
      parameters:
      - description: Identifier of zone
        explode: true
        in: query
        name: zoneId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-exportParamName: ZoneId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zonesGET_200_response'
          description: "Upon success, a response body containing the list of zone\
            \ information is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Query the information about one or more specific zones or a list of
        zones.
      tags:
      - location
      x-swagger-router-controller: queries
  /queries/zones/{zoneId}:
    get:
      description: The GET method is used to query the information about a specific
        zone.
      operationId: zoneGetById
      parameters:
      - description: Indentifier of zone
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
        x-exportParamName: ZoneId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zoneGetById_200_response'
          description: "Upon success, a response body containing the zone information\
            \ is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Query information about a specific zone
      tags:
      - location
      x-swagger-router-controller: queries
  /queries/zones/{zoneId}/accessPoints:
    get:
      description: The GET method is used to query the information about a specific
        access point or a list of access points under a zone.
      operationId: accessPointsGET
      parameters:
      - description: Indentifier of zone
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
        x-exportParamName: ZoneId
      - description: Identifier of access point
        explode: true
        in: query
        name: accessPointId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-exportParamName: AccessPointId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessPointsGET_200_response'
          description: "Upon success, a response body containing the list of access\
            \ point information is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Query information about a specific access point or a list of access
        points under a zone
      tags:
      - location
      x-swagger-router-controller: queries
  /queries/zones/{zoneId}/accessPoints/{accessPointId}:
    get:
      description: The GET method is used to query the information about a specific
        access point under a zone.
      operationId: accessPointGetById
      parameters:
      - description: Indentifier of zone
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
        x-exportParamName: ZoneId
      - description: Identifier of access Point
        explode: false
        in: path
        name: accessPointId
        required: true
        schema:
          type: string
        style: simple
        x-exportParamName: AccessPointId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessPointGetById_200_response'
          description: "Upon success, a response body containing the access point\
            \ information is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Query information about a specific access point under a zone.
      tags:
      - location
      x-swagger-router-controller: queries
  /subscriptions/area:
    get:
      description: The GET method is used to request information about the subscriptions
        for this requestor.
      operationId: areaSubListGET
      parameters:
      - description: "Query parameter to filter on a specific subscription type. Permitted\
          \ values: event"
        explode: true
        in: query
        name: subscription_type
        required: false
        schema:
          type: string
        style: form
        x-exportParamName: Subscription_type
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaSubListGET_200_response'
          description: "Upon success, a response body containing the list of links\
            \ to requestor's subscriptions is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Retrieves information about the subscriptions for this requestor.
      tags:
      - location
    post:
      callbacks:
        notification:
          '{$request.body#/userAreaSubscription.callbackReference}':
            post:
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: areaNotificationPOST
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/areaNotificationPOST_request'
                description: Subscription notification
                required: true
              responses:
                "204":
                  description: No Content
              summary: Callback POST used to send a notification
              x-callback-request: true
      description: The POST method is used to create a new subscription to area notifications.
      operationId: areaSubPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/areaSubPOST_request'
        description: Subscription to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaSubPOST_request'
          description: "Indicates successful resource creation, where the resource\
            \ URI shall be returned in the HTTP Location header field."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unsupported Media Type :  used to indicate that the server\
            \ or the client does not support the content type of the entity body."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Creates subscription to area notifications.
      tags:
      - location
      x-swagger-router-controller: subscriptions
  /subscriptions/area/{subscriptionId}:
    delete:
      description: The DELETE method is used to cancel the existing subscription.
      operationId: areaSubDELETE
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Cancel a subscription
      tags:
      - location
      x-swagger-router-controller: subscriptions
    get:
      description: The GET method is used to retrieve information about this subscription.
      operationId: areaSubGET
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaSubGET_200_response'
          description: "Upon success, a response body containing data type describing\
            \ the specific zone subscription is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Retrieve subscription information
      tags:
      - location
      x-swagger-router-controller: subscriptions
    put:
      description: The PUT method is used to update the existing subscription.
      operationId: areaSubPUT
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/areaNotificationPOST_request'
        description: Subscription to be modified
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaNotificationPOST_request'
          description: "Upon success, a response body containing data type describing\
            \ the updated subscription is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Updates a subscription information
      tags:
      - location
      x-swagger-router-controller: subscriptions
  /subscriptions/distance:
    get:
      description: This operation is used for retrieving all active subscriptions
        to a distance change notifications.
      operationId: distanceSubListGET
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaSubListGET_200_response'
          description: "Upon success, a response body containing the list of links\
            \ to requestor's subscriptions is returned."
      summary: Retrieves all active subscriptions to distance change notifications
      tags:
      - location
    post:
      callbacks:
        notification:
          '{$request.body#/userDistanceSubscription.callbackReference}':
            post:
              description: "Notification from Location service, content based user\
                \ distance subscription type"
              operationId: distanceNotificationPOST
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/distanceNotificationPOST_request'
                description: User Distance Notification
                required: true
              responses:
                "204":
                  description: No Content
              summary: Callback POST used to send a notification
              x-callback-request: true
      description: Creates a subscription to the Location Service for a distance change
        notification.
      operationId: distanceSubPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distanceSubPOST_request'
        description: The POST method is used to create a new subscription to user
          distance notifications.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distanceSubPOST_request'
          description: Successful subscription
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unsupported Media Type :  used to indicate that the server\
            \ or the client does not support the content type of the entity body."
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Creates a subscription for distance change notification
      tags:
      - location
      x-swagger-router-controller: subscriptions
  /subscriptions/distance/{subscriptionId}:
    delete:
      description: The DELETE method is used to cancel the existing subscription.
      operationId: distanceSubDELETE
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Cancel a subscription
      tags:
      - location
      x-swagger-router-controller: subscriptions
    get:
      description: The GET method is used to retrieve information about user distance
        subscription subscription.
      operationId: distanceSubGET
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distanceSubGET_200_response'
          description: "Upon success, a response body containing data type describing\
            \ the specific distance event subscription is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Retrieve user distance subscription information
      tags:
      - location
      x-swagger-router-controller: subscriptions
    put:
      description: The PUT method is used to update the existing user distance subscription.
      operationId: distanceSubPUT
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distanceSubPOST_request'
        description: Subscription to be modified
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distanceSubPOST_request'
          description: "Upon success, a response body containing data type describing\
            \ the updated subscription is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Updates a user distance subscription information
      tags:
      - location
      x-swagger-router-controller: subscriptions
  /subscriptions/users:
    get:
      description: 'The GET method is used to request information about the subscriptions
        for the requestor. '
      operationId: userSubListGET
      parameters:
      - description: "Query parameter to filter on a specific subscription type. Permitted\
          \ values: -event -periodic"
        explode: true
        in: query
        name: subscription_type
        required: false
        schema:
          type: string
        style: form
        x-exportParamName: Subscription_type_2
      - description: "Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI)."
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
        x-exportParamName: Address_2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaSubListGET_200_response'
          description: "Upon success, a response body containing the list of links\
            \ to requestor's subscriptions is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Retrieves information about the subscriptions for the requestor
      tags:
      - location
    post:
      callbacks:
        notification:
          '{$request.body#/userLocationEventSubscription.callbackReference}':
            post:
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: userNotificationPOST
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/userNotificationPOST_request'
                description: User LocationEvent Notification
                required: true
              responses:
                "204":
                  description: No Content
              summary: Callback POST used to send a notification
              x-callback-request: true
      description: The POST method is used to create a new subscription to UE location
        notifications.
      operationId: userSubPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSubPOST_request'
        description: Subscription to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userSubPOST_request'
          description: Indicates successful subscription creation.
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Create subscription to UE location notifications.
      tags:
      - location
      x-swagger-router-controller: subscriptions
  /subscriptions/users/{subscriptionId}:
    delete:
      description: The DELETE method is used to cancel the existing subscription.
      operationId: userSubDELETE
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Cancel a subscription
      tags:
      - location
      x-swagger-router-controller: subscriptions
    get:
      description: 'The GET method is used to retrieve information about this subscription. '
      operationId: userSubGET
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userSubGET_200_response'
          description: "Upon success, a response body containing data type describing\
            \ the specific Location event subscription is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Retrieve subscription information
      tags:
      - location
      x-swagger-router-controller: subscriptions
    put:
      description: The PUT method is used to update the existing subscription.
      operationId: userSubPUT
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSubPOST_request'
        description: Subscription to be modified
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userSubPOST_request'
          description: "Upon success, a response body containing data type describing\
            \ the updated subscription is returned. "
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Updates a subscription information
      tags:
      - location
      x-swagger-router-controller: subscriptions
  /subscriptions/zones:
    get:
      description: This operation is used for retrieving all active subscriptions
        to zone notifications.
      operationId: zoneSubListGET
      parameters:
      - description: "Query parameter to filter on a specific subscription type. Permitted\
          \ values: -event -status"
        explode: true
        in: query
        name: subscription_type
        required: false
        schema:
          type: string
        style: form
        x-exportParamName: Subscription_type_3
      - description: The identity of the zone
        explode: true
        in: query
        name: zoneId
        required: false
        schema:
          type: string
        style: form
        x-exportParamName: ZoneId_2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaSubListGET_200_response'
          description: "Upon success, a response body containing the list of links\
            \ to requestor's subscriptions is returned."
      summary: Retrieves all active subscriptions to zone notifications
      tags:
      - location
    post:
      callbacks:
        notification:
          '{$request.body#/zoneLocationEventSubscription.callbackReference}':
            post:
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: zoneNotificationPOST
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/zoneNotificationPOST_request'
                description: Subscription notification
                required: true
              responses:
                "204":
                  description: No Content
              summary: Callback POST used to send a notification
              x-callback-request: true
      description: The POST method is used to create a new subscription to zone notifications.
      operationId: zoneSubPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zoneSubPOST_request'
        description: Subscription to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zoneSubPOST_request'
          description: Indicates successful resource creation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unsupported Media Type :  used to indicate that the server\
            \ or the client does not support the content type of the entity body."
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Creates a subscription to zone notifications
      tags:
      - location
      x-swagger-router-controller: subscriptions
  /subscriptions/zones/{subscriptionId}:
    delete:
      description: The DELETE method is used to cancel the existing zone subscription.
      operationId: zoneSubDELETE
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Cancel a zone subscription
      tags:
      - location
      x-swagger-router-controller: subscriptions
    get:
      description: 'The GET method is used to retrieve information about zone subscription. '
      operationId: zoneSubGET
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zoneSubGET_200_response'
          description: "Upon success, a response body containing data type describing\
            \ the specific zone subscription is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Retrieve zone subscription information
      tags:
      - location
      x-swagger-router-controller: subscriptions
    put:
      description: The PUT method is used to update the existing zone subscription.
      operationId: zoneSubPUT
      parameters:
      - description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
        x-exportParamName: SubscriptionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zoneSubPOST_request'
        description: Subscription to be modified
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zoneSubPOST_request'
          description: "Upon success, a response body containing data type describing\
            \ the updated subscription is returned."
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Updates a zone subscription information
      tags:
      - location
      x-swagger-router-controller: subscriptions
components:
  parameters:
    Path.AccessPointId:
      description: Identifier of access Point
      explode: false
      in: path
      name: accessPointId
      required: true
      schema:
        type: string
      style: simple
      x-exportParamName: AccessPointId
    Path.SubscrId:
      description: "Subscription Identifier, specifically the \"self\" returned in\
        \ the subscription request"
      explode: false
      in: path
      name: subscriptionId
      required: true
      schema:
        format: uri
        type: string
      style: simple
      x-exportParamName: SubscriptionId
    Path.ZoneId:
      description: Indentifier of zone
      explode: false
      in: path
      name: zoneId
      required: true
      schema:
        type: string
      style: simple
      x-exportParamName: ZoneId
    Query.Subscription_type:
      description: "Query parameter to filter on a specific subscription type. Permitted\
        \ values: event"
      explode: true
      in: query
      name: subscription_type
      required: false
      schema:
        type: string
      style: form
      x-exportParamName: Subscription_type
    Query.Subscription_type_2:
      description: "Query parameter to filter on a specific subscription type. Permitted\
        \ values: -event -periodic"
      explode: true
      in: query
      name: subscription_type
      required: false
      schema:
        type: string
      style: form
      x-exportParamName: Subscription_type_2
    Query.Subscription_type_3:
      description: "Query parameter to filter on a specific subscription type. Permitted\
        \ values: -event -status"
      explode: true
      in: query
      name: subscription_type
      required: false
      schema:
        type: string
      style: form
      x-exportParamName: Subscription_type_3
    Query.AccessPointId:
      description: Identifier of access point
      explode: true
      in: query
      name: accessPointId
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
      x-exportParamName: AccessPointId
    Query.Address:
      description: One or two addresses of user to check. The second "address" parameter
        shall not be included when the distance between a user and a location is requested.
        The second "address" parameter shall be included when a location is not provided.
      explode: true
      in: query
      name: address
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
      x-exportParamName: Address
    Query.Address_2:
      description: "Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI)."
      explode: true
      in: query
      name: address
      required: false
      schema:
        type: string
      style: form
      x-exportParamName: Address_2
    Query.Address_3:
      description: "Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI)."
      explode: true
      in: query
      name: address
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
      x-exportParamName: Address_3
    Query.Location:
      description: Shall not be included when the distance between two terminals is
        requested.
      explode: true
      in: query
      name: location
      required: false
      schema:
        $ref: '#/components/schemas/distanceGET_location_parameter'
      style: form
      x-exportParamName: Location
    Query.ZoneId:
      description: Identifier of zone
      explode: true
      in: query
      name: zoneId
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
      x-exportParamName: ZoneId
    Query.ZoneId_2:
      description: The identity of the zone
      explode: true
      in: query
      name: zoneId
      required: false
      schema:
        type: string
      style: form
      x-exportParamName: ZoneId_2
  responses:
    "200":
      description: OK
    "204":
      description: No Content
    "400":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Bad Request : used to indicate that incorrect parameters were\
        \ passed to the request."
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Unauthorized :  used when the client did not submit credentials."
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Forbidden :  operation is not allowed given the current status\
        \ of the resource."
    "404":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Not Found :  used when a client provided a URI that cannot be\
        \ mapped to a valid resource URI."
    "406":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Not Acceptable : used to indicate that the server cannot provide\
        \ the any of the content formats supported by the client."
    "412":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Precondition failed :  used when a condition has failed during\
        \ conditional requests, e.g. when using ETags to avoid write conflicts when\
        \ using PUT"
    "414":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "URI Too Long : used to indicate that the server is refusing to\
        \ process the request because the request URI is longer than the server is\
        \ willing or able to process."
    "415":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Unsupported Media Type :  used to indicate that the server or\
        \ the client does not support the content type of the entity body."
    "422":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Unprocessable Entity : used to indicate that the server understands\
        \ the content type of the request entity and that the syntax of the request\
        \ entity is correct but that the server is unable to process the contained\
        \ instructions. This error condition can occur if an JSON request body is\
        \ syntactically correct but semantically incorrect, for example if the target\
        \ area for the request is considered too large. This error condition can also\
        \ occur if the capabilities required by the request are not supported."
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Too Many Requests : used when a rate limiter has triggered."
  schemas:
    AccessPointInfo:
      description: A type containing access point information.
      example:
        locationInfo:
          altitude: 5.962134
          orientationMajorAxis: 4
          shape: 7
          confidence: 5
          latitude:
          - 9.301444243932576
          - 9.301444243932576
          offsetAngle: 2
          accuracy: 0
          includedAngle: 2
          velocity:
            verticalUncertainty: 4
            horizontalSpeed: 1
            bearing: 1
            uncertainty: 6
            verticalSpeed: 1
            velocityType: 7
          accuracySemiMinor: 1
          innerRadius: 7
          accuracyAltitude: 6
          uncertaintyRadius: 1
          longitude:
          - 3.616076749251911
          - 3.616076749251911
        operationStatus: Serviceable
        resourceURL: resourceURL
        numberOfUsers: 0
        timezone: timezone
        accessPointId: accessPointId
        interestRealm: interestRealm
        connectionType: LTE
      properties:
        accessPointId:
          description: Identifier of access point.
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        connectionType:
          $ref: '#/components/schemas/ConnectionType'
        interestRealm:
          description: Interest realm of access point.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        numberOfUsers:
          description: Number of users currently on the access point.
          type: integer
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: integer
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
        resourceURL:
          description: Self referring URL
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        timezone:
          description: Time zone of access point.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: dateTimeStamp
      required:
      - accessPointId
      - connectionType
      - numberOfUsers
      - operationStatus
      - resourceURL
      type: object
    OperationStatus:
      description: An enumeration defining the operations status of an access point.
      enum:
      - Serviceable
      - Unserviceable
      - Unknown
      type: string
    AccessPointList:
      description: A type containing list of access points.
      example:
        resourceURL: resourceURL
        zoneId: zoneId
        accessPoint:
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444243932576
            - 9.301444243932576
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.616076749251911
            - 3.616076749251911
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: LTE
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444243932576
            - 9.301444243932576
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.616076749251911
            - 3.616076749251911
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: LTE
      properties:
        accessPoint:
          description: Collection of the access point information list.
          items:
            $ref: '#/components/schemas/AccessPointInfo'
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: AccessPointInfo
        resourceURL:
          description: Self referring URL
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zoneId:
          description: Identifier of zone
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      required:
      - resourceURL
      - zoneId
      type: object
    ConnectionType:
      description: This enumeration represents the connection type of an access point
      enum:
      - LTE
      - Wifi
      - Wimax
      - 5G NR
      - UNKNOWN
      type: string
    LocationInfo:
      example:
        altitude: 5.962134
        orientationMajorAxis: 4
        shape: 7
        confidence: 5
        latitude:
        - 9.301444243932576
        - 9.301444243932576
        offsetAngle: 2
        accuracy: 0
        includedAngle: 2
        velocity:
          verticalUncertainty: 4
          horizontalSpeed: 1
          bearing: 1
          uncertainty: 6
          verticalSpeed: 1
          velocityType: 7
        accuracySemiMinor: 1
        innerRadius: 7
        accuracyAltitude: 6
        uncertaintyRadius: 1
        longitude:
        - 3.616076749251911
        - 3.616076749251911
      properties:
        accuracy:
          description: "Horizontal accuracy/(semi-major) uncertainty of location provided\
            \ in meters, as defined in [14]. Present only if \"shape\" equals 4, 5\
            \ or 6."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        accuracyAltitude:
          description: "Altitude accuracy/uncertainty of location provided in meters,\
            \ as defined in [14]. Present only if \"shape\" equals 3 or 4."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        accuracySemiMinor:
          description: "Horizontal accuracy/(semi-major) uncertainty of location provided\
            \ in meters, as defined in [14]. Present only if \"shape\" equals 4, 5\
            \ or 6."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        altitude:
          description: Location altitude relative to the WGS84 ellipsoid surface.
          format: float
          type: number
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Float
        confidence:
          description: "Confidence by which the position of a target entity is known\
            \ to be within the shape description, expressed as a percentage and defined\
            \ in [14]. Present only if \"shape\" equals 1, 4 or 6."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        includedAngle:
          description: Present only if "shape" equals 6.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        innerRadius:
          description: Present only if "shape" equals 6.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        latitude:
          description: "Location latitude, expressed in the range -90° to +90°. Cardinality\
            \ greater than one only if \"shape\" equals 7."
          format: float
          items:
            type: number
          minItems: 1
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Float
        longitude:
          description: "Location longitude, expressed in the range -180° to +180°\
            . Cardinality greater than one only if \"shape\" equals 7."
          format: float
          items:
            type: number
          minItems: 1
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Float
        offsetAngle:
          description: Present only if "shape" equals 6.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        orientationMajorAxis:
          description: "Angle of orientation of the major axis, expressed in the range\
            \ 0° to 180°, as defined in [14]. Present only if \"shape\" equals 4 or\
            \ 6."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        shape:
          description: "Shape information, as detailed in [14], associated with the\
            \ reported location coordinate: 1 = Ellipsoid_Arc 2 = ellipsoid_Point\
            \ 3 = ellipsoid_Point_Altitude 4 = ellipsoid_Point_Altitude_Uncert_Ellipsoid\
            \ 5 = ellipsoid_Point_Uncert_Circle 6 = ellipsoid_Point_Uncert_Ellipse\
            \ 7 = polygon"
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Enum_inlined
        uncertaintyRadius:
          description: Present only if "shape" equals 6.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        velocity:
          $ref: '#/components/schemas/Velocity'
      required:
      - latitude
      - longitude
      - shape
      type: object
      x-etsi-ref: 6.5.3
    Velocity:
      description: "Structure with attributes relating to the target entity’s velocity,\
        \ as defined in [14]."
      example:
        verticalUncertainty: 4
        horizontalSpeed: 1
        bearing: 1
        uncertainty: 6
        verticalSpeed: 1
        velocityType: 7
      properties:
        bearing:
          description: "Bearing, expressed in the range 0° to 360°, as defined in\
            \ [14]."
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: UnsignedInt
        horizontalSpeed:
          description: "Horizontal speed, expressed in km/h and defined in [14]."
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: UnsignedInt
        uncertainty:
          description: "Horizontal uncertainty, as defined in [14]. Present only if\
            \ \"velocityType\" equals 3 or 4."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        velocityType:
          description: "Velocity information, as detailed in [14], associated with\
            \ the reported location coordinate: 1 = Horizontal 2 = Horizontal_Vertical\
            \ 3 = Horizontal_Uncert 4 = Horizontal_Vertical_Uncert"
          enum:
          - 1
          - 2
          - 3
          - 4
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Enum_inlined
        verticalSpeed:
          description: "Vertical speed, expressed in km/h and defined in [14]. Present\
            \ only if \"velocityType\" equals 2 or 4."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Int
        verticalUncertainty:
          description: "Vertical uncertainty, as defined in [14]. Present only if\
            \ \"velocityType\" equals 4."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
      required:
      - bearing
      - horizontalSpeed
      - velocityType
      type: object
      x-etsi-mec-cardinality: 0..1
      x-etsi-mec-origin-type: Structure (inlined)
    NotificationSubscriptionList:
      description: This type contains a list of subscriptions.
      example:
        resourceURL:
          href: https://openapi-generator.tech
        subscription:
        - subscriptionType: subscriptionType
          href: https://openapi-generator.tech
        - subscriptionType: subscriptionType
          href: https://openapi-generator.tech
      properties:
        resourceURL:
          $ref: '#/components/schemas/LinkType'
        subscription:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
      required:
      - resourceURL
      type: object
      x-etsi-ref: 6.3.3
    ProblemDetails:
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: URI
        status:
          description: The HTTP status code for this occurrence of the problem
          format: uint32
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uint32
        title:
          description: "A short, human-readable summary of the problem type"
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        type:
          description: A URI reference according to IETF RFC 3986 that identifies
            the problem type
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: URI
      type: object
    TerminalDistance:
      description: "A type containing information about the distance from a terminal\
        \ to a location or between two terminals, in addition the accuracy and a timestamp\
        \ of the information are provided."
      example:
        distance: 6
        accuracy: 0
        timestamp:
          seconds: 5
          nanoSeconds: 1
      properties:
        accuracy:
          description: Accuracy of the provided distance in meters
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: integer
        distance:
          description: Distance from terminal to a location or between two terminals
            specified in meters
          type: integer
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: integer
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
      required:
      - distance
      type: object
    TerminalLocation:
      description: "A type containing device address, retrieval status and location\
        \ information."
      properties:
        address:
          description: "Address of the terminal to which the location information\
            \ applies (e.g., 'sip' URI, 'tel' URI, 'acr' URI)."
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        currentLocation:
          $ref: '#/components/schemas/LocationInfo'
        errorInformation:
          $ref: '#/components/schemas/ServiceError'
        locationRetrievalStatus:
          $ref: '#/components/schemas/RetrievalStatus'
      required:
      - address
      - locationRetrievalStatus
      type: object
    RetrievalStatus:
      enum:
      - Retrieved
      - NotRetrieved
      - Error
      type: string
    ServiceError:
      description: Used to indicate a notification termination or cancellation.
      properties:
        messageId:
          description: "Message identifier, either with prefix SVC or with prefix\
            \ POL"
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        text:
          description: "Message text, with replacement variables marked with %n, where\
            \ n is an index into the list of <variables> elements, starting at 1"
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        variables:
          description: Variables to substitute into text string
          items:
            type: string
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: string
      required:
      - messageId
      - text
      type: object
    TimeStamp:
      example:
        seconds: 5
        nanoSeconds: 1
      properties:
        nanoSeconds:
          description: "The nanoseconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC."
          format: uint32
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
        seconds:
          description: "The seconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC."
          format: uint32
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
      required:
      - nanoSeconds
      - seconds
      type: object
      x-etsi-ref: 6.5.2
    UserInfo:
      description: "This type represents the information related to a user attached\
        \ to an access point associated to the MEC host, such access point is in scope\
        \ of the Location Service instance."
      example:
        locationInfo:
          altitude: 5.962134
          orientationMajorAxis: 4
          shape: 7
          confidence: 5
          latitude:
          - 9.301444243932576
          - 9.301444243932576
          offsetAngle: 2
          accuracy: 0
          includedAngle: 2
          velocity:
            verticalUncertainty: 4
            horizontalSpeed: 1
            bearing: 1
            uncertainty: 6
            verticalSpeed: 1
            velocityType: 7
          accuracySemiMinor: 1
          innerRadius: 7
          accuracyAltitude: 6
          uncertaintyRadius: 1
          longitude:
          - 3.616076749251911
          - 3.616076749251911
        address: https://openapi-generator.tech
        resourceURL: resourceURL
        AccessPointId: AccessPointId
        zoneId: zoneId
        ancillaryInfo: ancillaryInfo
        civicInfo:
          POBOX: POBOX
          usageRules: usageRules
          country: country
          PRD: PRD
          PLC: PLC
          HNO: HNO
          PRM: PRM
          HNS: HNS
          FLR: FLR
          A1: A1
          A2: A2
          A3: A3
          A4: A4
          STS: STS
          A5: A5
          A6: A6
          RDSEC: RDSEC
          providedBy: providedBy
          LOC: LOC
          UNIT: UNIT
          SEAT: SEAT
          POD: POD
          RDBR: RDBR
          method: method
          LMK: LMK
          POM: POM
          ADDCODE: ADDCODE
          RD: RD
          PC: PC
          PCN: PCN
          NAM: NAM
          BLD: BLD
          ROOM: ROOM
          RDSUBBR: RDSUBBR
        relativeLocationInfo:
          mapInfo:
            origin:
              altitude: 6.6835623
              latitude: 8.762042
              longitude: 9.018348
            mapId: mapId
            ancillaryMapInfo: "{}"
          X: 5.025005
          "Y": 9.965781
          Z: 9.36931
        timestamp:
          seconds: 5
          nanoSeconds: 1
      properties:
        address:
          description: "Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI) currently\
            \ on the access point, see note 1."
          format: uri
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: AnyURI
        AccessPointId:
          description: "The identity of the access point the user is currently on,\
            \ see note 1."
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        zoneId:
          description: "The identity of the zone the user is currently within, see\
            \ note 1."
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        resourceURL:
          description: "Self-referring URL, see note 1."
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: AnyURI
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        civicInfo:
          $ref: '#/components/schemas/CivicAddress'
        ancillaryInfo:
          description: Reserved for future use.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        relativeLocationInfo:
          $ref: '#/components/schemas/RelativeLocationInfo'
      required:
      - accessPointId
      - address
      - resourceURL
      - timestamp
      - zoneId
      type: object
      x-etsi-notes: "NOTE 1:\tAs specified in [5], clause 5.2.2.7.\nNOTE 2: \tAs specified\
        \ in [5], clause 5.2.2.5."
      x-etsi-ref: 6.2.2
    UserList:
      description: A type containing list of users.
      example:
        resourceURL: resourceURL
        user:
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444243932576
            - 9.301444243932576
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.616076749251911
            - 3.616076749251911
          address: https://openapi-generator.tech
          resourceURL: resourceURL
          AccessPointId: AccessPointId
          zoneId: zoneId
          ancillaryInfo: ancillaryInfo
          civicInfo:
            POBOX: POBOX
            usageRules: usageRules
            country: country
            PRD: PRD
            PLC: PLC
            HNO: HNO
            PRM: PRM
            HNS: HNS
            FLR: FLR
            A1: A1
            A2: A2
            A3: A3
            A4: A4
            STS: STS
            A5: A5
            A6: A6
            RDSEC: RDSEC
            providedBy: providedBy
            LOC: LOC
            UNIT: UNIT
            SEAT: SEAT
            POD: POD
            RDBR: RDBR
            method: method
            LMK: LMK
            POM: POM
            ADDCODE: ADDCODE
            RD: RD
            PC: PC
            PCN: PCN
            NAM: NAM
            BLD: BLD
            ROOM: ROOM
            RDSUBBR: RDSUBBR
          relativeLocationInfo:
            mapInfo:
              origin:
                altitude: 6.6835623
                latitude: 8.762042
                longitude: 9.018348
              mapId: mapId
              ancillaryMapInfo: "{}"
            X: 5.025005
            "Y": 9.965781
            Z: 9.36931
          timestamp:
            seconds: 5
            nanoSeconds: 1
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444243932576
            - 9.301444243932576
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.616076749251911
            - 3.616076749251911
          address: https://openapi-generator.tech
          resourceURL: resourceURL
          AccessPointId: AccessPointId
          zoneId: zoneId
          ancillaryInfo: ancillaryInfo
          civicInfo:
            POBOX: POBOX
            usageRules: usageRules
            country: country
            PRD: PRD
            PLC: PLC
            HNO: HNO
            PRM: PRM
            HNS: HNS
            FLR: FLR
            A1: A1
            A2: A2
            A3: A3
            A4: A4
            STS: STS
            A5: A5
            A6: A6
            RDSEC: RDSEC
            providedBy: providedBy
            LOC: LOC
            UNIT: UNIT
            SEAT: SEAT
            POD: POD
            RDBR: RDBR
            method: method
            LMK: LMK
            POM: POM
            ADDCODE: ADDCODE
            RD: RD
            PC: PC
            PCN: PCN
            NAM: NAM
            BLD: BLD
            ROOM: ROOM
            RDSUBBR: RDSUBBR
          relativeLocationInfo:
            mapInfo:
              origin:
                altitude: 6.6835623
                latitude: 8.762042
                longitude: 9.018348
              mapId: mapId
              ancillaryMapInfo: "{}"
            X: 5.025005
            "Y": 9.965781
            Z: 9.36931
          timestamp:
            seconds: 5
            nanoSeconds: 1
      properties:
        resourceURL:
          description: Self referring URL
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        user:
          description: Collection of the zone information list.
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: UserInfo
      required:
      - resourceURL
      type: object
    ZoneInfo:
      description: A type containing zone information.
      example:
        resourceURL: resourceURL
        numberOfUsers: 1
        zoneId: zoneId
        numberOfAccessPoints: 0
        numberOfUnserviceableAccessPoints: 6
      properties:
        numberOfAccessPoints:
          description: The number of access points within the zone
          type: integer
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUnserviceableAccessPoints:
          description: Number of inoperable access points within the zone.
          type: integer
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUsers:
          description: The number of users currently on the access point.
          type: integer
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        resourceURL:
          description: Self referring URL
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zoneId:
          description: Identifier of zone
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      required:
      - numberOfAccessPoints
      - numberOfUnserviceableAccessPoints
      - numberOfUsers
      - resourceURL
      - zoneId
      type: object
    ZoneList:
      description: A type containing a list of zones.
      example:
        resourceURL: resourceURL
        zone:
        - resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
        - resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
      properties:
        resourceURL:
          description: Self referring URL
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zone:
          description: Collection of the zone information list.
          items:
            $ref: '#/components/schemas/ZoneInfo'
          type: array
      required:
      - resourceURL
      type: object
    ZoneStatusNotification:
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        accessPointId:
          description: Identifier of an access point (e.g. ap01). Shall be included
            when userNumEvent related with access point or operationStatus is included.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        notificationType:
          description: Shall be set to "ZoneStatusNotification".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
        timeStamp:
          $ref: '#/components/schemas/TimeStamp'
        userNumEvent:
          description: "Shall be present when ZoneStatusSubscription includes upperNumberOfUsersZoneThreshold,\
            \ lowerNumberOfUsersZoneThreshold, upperNumberOfUsersAPThreshold or lowerNumberOfUsersAPThreshold,\
            \ and the number of users in a zone or an access point crosses the threshold\
            \ defined in the subscription: 1 = OVER_ZONE_UPPER_THD. 2 = UNDER_ZONE_LOWER_THD.\
            \ 3 = OVER_AP_UPPER_THD. 4 = UNDER_AP_LOWER_THD."
          enum:
          - 1
          - 2
          - 3
          - 4
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Enum(inlined)
        zoneId:
          description: 'The identity of the zone. '
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - _links
      - notificationType
      - zoneId
      type: object
      x-etsi-notes: "NOTE:\tAs specified in [5], clause 5.2.3.2."
      x-etsi-ref: 6.4.7
    ZoneStatusSubscription:
      example:
        lowerNumberOfUsersZoneThreshold: 6
        operationStatus:
        - Serviceable
        - Serviceable
        _links:
          self:
            href: https://openapi-generator.tech
        callbackReference: https://openapi-generator.tech
        lowerNumberOfUsersAPThreshold: 0
        upperNumberOfUsersAPThreshold: 1
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: https://openapi-generator.tech
        requestTestNotification: true
        subscriptionType: subscriptionType
        expiryDeadline:
          seconds: 5
          nanoSeconds: 1
        clientCorrelator: clientCorrelator
        zoneId: zoneId
        upperNumberOfUsersZoneThreshold: 5
        reportingCtrl:
          maximumCount: 5
          minimumInterval: 7
          maximumFrequency: 2
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        callbackReference:
          description: URI exposed by the client on which to receive notifications
            via HTTP. See note 1.
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
        clientCorrelator:
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
            See note 2.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        expiryDeadline:
          $ref: '#/components/schemas/TimeStamp'
        lowerNumberOfUsersAPThreshold:
          description: Threshold number of users in an access point which if crossed
            downward shall cause a notification
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        lowerNumberOfUsersZoneThreshold:
          description: Threshold number of users in a zone which if crossed downward
            shall cause a notification
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        operationStatus:
          description: List of operation status values to generate notifications for
            (these apply to all access points within a zone). See note 3.
          items:
            $ref: '#/components/schemas/OperationStatus'
          minItems: 0
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: OperationStatus
        reportingCtrl:
          $ref: '#/components/schemas/ReportingCtrl'
        requestTestNotification:
          description: "Set to TRUE by the service consumer to request a test notification\
            \ via HTTP on the callbackReference URI, as specified in ETSI GS\_MEC\
            \ 009 [4], clause 6.12a."
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Boolean
        subscriptionType:
          description: Shall be set to "ZoneStatusSubscription".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        upperNumberOfUsersAPThreshold:
          description: Threshold number of users in an access point which if crossed
            upward shall cause a notification.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        upperNumberOfUsersZoneThreshold:
          description: Threshold number of users in a zone which if crossed upward
            shall cause a notification.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
        zoneId:
          description: Identifier of zone (e.g. zone001) to monitor.
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - subscriptionType
      - zoneId
      type: object
      x-etsi-notes: "NOTE 1:\tAt least one of callbackReference and websockNotifConfig\
        \ shall be provided by the service consumer. If both are provided, it is up\
        \ to location server to select an alternative and return only that alternative\
        \ in the response, as specified in ETSI GS MEC 009 [4], clause 6.12a.\nNOTE\
        \ 2:\tThis allows the client to recover from communication failures during\
        \ resource creation and therefore avoids duplicate subscription creation in\
        \ such situations. In case the element is present, the server shall not alter\
        \ its value, and shall provide it as part of the representation of this resource.\
        \ In case the element is not present, the server shall not generate it.\n\
        NOTE 3:\tAs specified in [5], clause 5.2.3.2."
      x-etsi-ref: 6.3.7
    RelativeLocationInfo:
      example:
        mapInfo:
          origin:
            altitude: 6.6835623
            latitude: 8.762042
            longitude: 9.018348
          mapId: mapId
          ancillaryMapInfo: "{}"
        X: 5.025005
        "Y": 9.965781
        Z: 9.36931
      properties:
        X:
          description: Indicates the value (in the unit of meters) on x-axis of the
            relative location in the Cartesian system. Positive value represents easting
            from origin.
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
        "Y":
          description: Indicates the value (in the unit of meters) on y-axis of the
            relative location in the Cartesian system. Positive value represents northing
            from origin.
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
        Z:
          description: Indicates the value (in the unit of meters) on z-axis of the
            relative location in the Cartesian system for a 3DPoint. Positive value
            represents height above origin.
          format: float
          type: number
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Float
        mapInfo:
          $ref: '#/components/schemas/MapInfo'
      required:
      - X
      - "Y"
      - mapInfo
      type: object
      x-etsi-ref: 6.2.3
    MapInfo:
      example:
        origin:
          altitude: 6.6835623
          latitude: 8.762042
          longitude: 9.018348
        mapId: mapId
        ancillaryMapInfo: "{}"
      properties:
        ancillaryMapInfo:
          description: Ancillary map information may be used to convert coordinates
            between different coordinate systems.
          type: object
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Not_specified
        mapId:
          description: 'Indicates the ID of the map. '
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        origin:
          $ref: '#/components/schemas/Origin'
      required:
      - mapId
      type: object
      x-etsi-ref: 6.2.4
    Origin:
      description: Indicates the location of the map origin in the local Cartesian
        coordinate system.
      example:
        altitude: 6.6835623
        latitude: 8.762042
        longitude: 9.018348
      properties:
        altitude:
          description: Location altitude relative to the WGS84 ellipsoid surface.
          format: float
          type: number
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Float
        latitude:
          description: "Location latitude, expressed in the range -90° to +90°."
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
        longitude:
          description: "Location longitude, expressed in the range -180° to +180°."
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
      required:
      - latitude
      - longitude
      type: object
      x-etsi-mec-cardinality: 0..1
      x-etsi-mec-origin-type: Structure(inlined)
    Subscription:
      description: ""
      example:
        subscriptionType: subscriptionType
        href: https://openapi-generator.tech
      minItems: 0
      properties:
        href:
          description: The URI referring to the subscription.
          format: uri
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uri
        subscriptionType:
          description: |-
            Type of the subscription. The string shall be set according to the "subscriptionType" attribute of the associated subscription data type defined in clauses 6.3.4, 6.3.5, 6.3.6, 6.3.7 6.3.8 and 6.3.9:
            "UserLocationEventSubscription"
            "UserLocationPeriodicSubscription"
            "ZoneLocationEventSubscription"
            "ZoneStatusSubscription"
            "UserAreaSubscription"
            "UserDistanceSubscription"
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - href
      - subscriptionType
      type: object
      x-etsi-mec-cardinality: 0..N
      x-etsi-mec-origin-type: Structure (inlined)
    LinkType:
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          description: URI referring to a resource.
          format: uri
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uri
      required:
      - href
      type: object
      x-etsi-ref: 6.7.2
    UserLocationEventSubscription:
      example:
        userEventPara:
          reportingLocationReq: true
          accessPointList:
          - accessPointList
          - accessPointList
          zoneId: zoneId
          occurrenceInfo: ONE_TIME_EVENT
        address: https://openapi-generator.tech
        _links:
          self:
            href: https://openapi-generator.tech
        subscriptionType: subscriptionType
        callbackReference: https://openapi-generator.tech
        expiryDeadline:
          seconds: 5
          nanoSeconds: 1
        clientCorrelator: clientCorrelator
        locationEventCriteria:
        - ENTERING_AREA_EVENT
        - ENTERING_AREA_EVENT
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: https://openapi-generator.tech
        requestTestNotification: true
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        address:
          description: "Address of user (e.g. ‘sip’ URI, ‘tel’ URI, ‘acr’ URI) to\
            \ monitor."
          format: uri
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uri
        callbackReference:
          description: URI exposed by the client on which to receive notifications
            via HTTP. See note 1.
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
        clientCorrelator:
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
            See note 2.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        expiryDeadline:
          $ref: '#/components/schemas/TimeStamp'
        locationEventCriteria:
          description: 'List of user event values to generate notifications for (these
            apply to address specified). '
          items:
            $ref: '#/components/schemas/LocationEventType'
          minItems: 0
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Array(LocationEventType)
        requestTestNotification:
          description: "Set to TRUE by the service consumer to request a test notification\
            \ via HTTP on the callbackReference URI, as specified in ETSI GS\_MEC\
            \ 009 [4], clause 6.12a."
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Boolean
        subscriptionType:
          description: Shall be set to "UserLocationEventSubscription".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        userEventPara:
          $ref: '#/components/schemas/UserEventPara'
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
      required:
      - address
      - subscriptionType
      type: object
      x-etsi-notes: "NOTE 1:\tAt least one of callbackReference and websockNotifConfig\
        \ shall be provided by the service consumer. If both are provided, it is up\
        \ to location server to select an alternative and return only that alternative\
        \ in the response, as specified in ETSI GS MEC 009 [4], clause 6.12a.\nNOTE\
        \ 2:\tThis allows the client to recover from communication failures during\
        \ resource creation and therefore avoids duplicate subscription creation in\
        \ such situations. In case the element is present, the server shall not alter\
        \ its value, and shall provide it as part of the representation of this resource.\
        \ In case the element is not present, the server shall not generate it."
      x-etsi-ref: 6.3.4
    UserLocationPeriodicSubscription:
      example:
        periodicEventInfo:
          reportingInterval: 6.027456183070403
          reportingAmount: 0.8008281904610115
        address: https://openapi-generator.tech
        _links:
          self:
            href: https://openapi-generator.tech
        subscriptionType: subscriptionType
        callbackReference: https://openapi-generator.tech
        expiryDeadline:
          seconds: 5
          nanoSeconds: 1
        clientCorrelator: clientCorrelator
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: https://openapi-generator.tech
        requestTestNotification: true
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        address:
          description: "Address of user (e.g. ‘sip’ URI, ‘tel’ URI, ‘acr’ URI) to\
            \ monitor."
          format: uri
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uri
        callbackReference:
          description: URI exposed by the client on which to receive notifications
            via HTTP. See note 1.
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
        clientCorrelator:
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
            See note 2.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        expiryDeadline:
          $ref: '#/components/schemas/TimeStamp'
        periodicEventInfo:
          $ref: '#/components/schemas/PeriodicEventInfo'
        requestTestNotification:
          description: "Set to TRUE by the service consumer to request a test notification\
            \ via HTTP on the callbackReference URI, as specified in ETSI GS MEC 009\
            \ [4], clause 6.12a."
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Boolean
        subscriptionType:
          description: Shall be set to "UserLocationPeriodicSubscription".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
      required:
      - address
      - periodicEventInfo
      - subscriptionType
      type: object
      x-etsi-notes: "NOTE 1:\tAt least one of callbackReference and websockNotifConfig\
        \ shall be provided by the service consumer. If both are provided, it is up\
        \ to location server to select an alternative and return only that alternative\
        \ in the response, as specified in ETSI GS MEC 009 [4], clause 6.12a.\nNOTE\
        \ 2:\tThis allows the client to recover from communication failures during\
        \ resource creation and therefore avoids duplicate subscription creation in\
        \ such situations. In case the element is present, the server shall not alter\
        \ its value, and shall provide it as part of the representation of this resource.\
        \ In case the element is not present, the server shall not generate it.\n\
        NOTE 3:\tAs specified in [17], clause 6.1.6.2.24."
      x-etsi-ref: 6.3.5
    PeriodicEventInfo:
      description: "NOTE: reportingAmount x reportingInterval shall not exceed 8639999\
        \ (99 days, 23 hours, 59 minutes and 59 seconds) for compatibility with OMA\
        \ MLP and RLP."
      example:
        reportingInterval: 6.027456183070403
        reportingAmount: 0.8008281904610115
      properties:
        reportingAmount:
          description: Number of event reports
          type: number
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: ReportingAmount
        reportingInterval:
          description: Interval of event reports
          type: number
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: reportingInterval
      required:
      - reportingAmount
      - reportingInterval
      type: object
    ZoneLocationEventSubscription:
      example:
        _links:
          self:
            href: https://openapi-generator.tech
        subscriptionType: subscriptionType
        addressList:
        - addressList
        - addressList
        callbackReference: https://openapi-generator.tech
        expiryDeadline:
          seconds: 5
          nanoSeconds: 1
        clientCorrelator: clientCorrelator
        locationEventCriteria:
        - ENTERING_AREA_EVENT
        - ENTERING_AREA_EVENT
        zoneId: zoneId
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: https://openapi-generator.tech
        requestTestNotification: true
        reportingCtrl:
          maximumCount: 5
          minimumInterval: 7
          maximumFrequency: 2
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        addressList:
          description: "List of the users to be monitored. If not present, all the\
            \ users need to be monitored."
          items:
            type: string
          minItems: 0
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Array(Uri)
        callbackReference:
          description: URI exposed by the client on which to receive notifications
            via HTTP. See note 1.
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
        clientCorrelator:
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
            See note 2.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        expiryDeadline:
          $ref: '#/components/schemas/TimeStamp'
        locationEventCriteria:
          description: 'List of user event values to generate notifications for. '
          items:
            $ref: '#/components/schemas/LocationEventType'
          minItems: 0
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Array(LocationEventType)
        reportingCtrl:
          $ref: '#/components/schemas/ReportingCtrl'
        requestTestNotification:
          description: "Set to TRUE by the service consumer to request a test notification\
            \ via HTTP on the callbackReference URI, as specified in ETSI GS\_MEC\
            \ 009 [4], clause 6.12a."
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Boolean
        subscriptionType:
          description: Shall be set to "ZoneLocationEventSubscription".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
        zoneId:
          description: Identifier of zone (e.g. zone001) to monitor.
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - subscriptionType
      - zoneId
      type: object
      x-etsi-notes: "NOTE 1:\tAt least one of callbackReference and websockNotifConfig\
        \ shall be provided by the service consumer. If both are provided, it is up\
        \ to location server to select an alternative and return only that alternative\
        \ in the response, as specified in ETSI GS MEC 009 [4], clause 6.12a.\nNOTE\
        \ 2:\tThis allows the client to recover from communication failures during\
        \ resource creation and therefore avoids duplicate subscription creation in\
        \ such situations. In case the element is present, the server shall not alter\
        \ its value, and shall provide it as part of the representation of this resource.\
        \ In case the element is not present, the server shall not generate it."
      x-etsi-ref: 6.3.6
    UserAreaSubscription:
      example:
        areaDefine:
          shape: 5
          radius: 1
          points:
          - latitude: 0.8008282
            longitude: 6.0274563
          - latitude: 0.8008282
            longitude: 6.0274563
        trackingAccuracy: 9.301444
        reportingLocationReq: true
        _links:
          self:
            href: https://openapi-generator.tech
        callbackReference: https://openapi-generator.tech
        locationEventCriteria:
        - ENTERING_AREA_EVENT
        - ENTERING_AREA_EVENT
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: https://openapi-generator.tech
        requestTestNotification: true
        subscriptionType: subscriptionType
        addressList:
        - addressList
        - addressList
        expiryDeadline:
          seconds: 5
          nanoSeconds: 1
        clientCorrelator: clientCorrelator
        reportingCtrl:
          maximumCount: 5
          minimumInterval: 7
          maximumFrequency: 2
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        addressList:
          description: 'List of the users to be monitored. '
          items:
            type: string
          minItems: 1
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Array(Uri)
        areaDefine:
          $ref: '#/components/schemas/AreaInfo'
        callbackReference:
          description: URI exposed by the client on which to receive notifications
            via HTTP. See note 1.
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
        clientCorrelator:
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
            See note 2.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        expiryDeadline:
          $ref: '#/components/schemas/TimeStamp'
        locationEventCriteria:
          description: 'List of user event values to generate notifications for (these
            apply to address specified). '
          items:
            $ref: '#/components/schemas/LocationEventType'
          minItems: 0
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Array(LocationEventType)
        reportingCtrl:
          $ref: '#/components/schemas/ReportingCtrl'
        reportingLocationReq:
          description: This IE shall be set to true if a location estimate is required
            for each event report.
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: boolean
        requestTestNotification:
          description: "Set to TRUE by the service consumer to request a test notification\
            \ via HTTP on the callbackReference URI, as specified in ETSI GS\_MEC\
            \ 009 [4], clause 6.12a."
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Boolean
        subscriptionType:
          description: Shall be set to "UserAreaSubscription".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        trackingAccuracy:
          description: Number of meters of acceptable error.
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
      required:
      - addressList
      - areaDefine
      - subscriptionType
      - trackingAccuracy
      type: object
      x-etsi-notes: "NOTE 1:\tAt least one of callbackReference and websockNotifConfig\
        \ shall be provided by the service consumer. If both are provided, it is up\
        \ to location server to select an alternative and return only that alternative\
        \ in the response, as specified in ETSI GS MEC 009 [4], clause 6.12a.\nNOTE\
        \ 2:\tThis allows the client to recover from communication failures during\
        \ resource creation and therefore avoids duplicate subscription creation in\
        \ such situations. In case the element is present, the server shall not alter\
        \ its value, and shall provide it as part of the representation of this resource.\
        \ In case the element is not present, the server shall not generate it."
      x-etsi-ref: 6.3.8
    UserDistanceSubscription:
      example:
        trackingAccuracy: 6.0274563
        distance: 0.8008282
        _links:
          self:
            href: https://openapi-generator.tech
        callbackReference: https://openapi-generator.tech
        criteria: AllWithinDistance
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: https://openapi-generator.tech
        requestTestNotification: true
        monitoredAddress:
        - monitoredAddress
        - monitoredAddress
        referenceAddress:
        - referenceAddress
        - referenceAddress
        subscriptionType: subscriptionType
        expiryDeadline:
          seconds: 5
          nanoSeconds: 1
        clientCorrelator: clientCorrelator
        checkImmediate: true
        reportingCtrl:
          maximumCount: 5
          minimumInterval: 7
          maximumFrequency: 2
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        callbackReference:
          description: URI exposed by the client on which to receive notifications
            via HTTP. See note 1.
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
        checkImmediate:
          type: boolean
        clientCorrelator:
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
            See note 2.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        criteria:
          $ref: '#/components/schemas/DistanceCriteria'
        distance:
          description: Distance between users that shall be monitored. The unit is
            meter.
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
        expiryDeadline:
          $ref: '#/components/schemas/TimeStamp'
        monitoredAddress:
          description: |-
            Contains addresses of users to monitor (e.g., ‘sip’ URI, ‘tel’ URI, ‘acr’ URI). Reference to a group could be provided here if supported by implementation.
            If the ReferenceAddress is specified, then the distance between each monitored user and reference user(s) will be monitored.
            If the ReferenceAddress is not present, then the distance between each pair of the monitored users will be monitored. Note that in that case there shall be at least two addresses specified here.
          items:
            type: string
          minItems: 1
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Array(Uri)
        referenceAddress:
          description: "If specified, indicates address of each user that will be\
            \ used as reference users from which the distances towards monitored users\
            \ indicated in the Addresses will be monitored (e.g., ‘sip’ URI, ‘tel’\
            \ URI, ‘acr’ URI). Reference to a group could be provided here if supported\
            \ by implementation."
          items:
            type: string
          minItems: 0
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Array(Uri)
        reportingCtrl:
          $ref: '#/components/schemas/ReportingCtrl'
        requestTestNotification:
          description: "Set to TRUE by the service consumer to request a test notification\
            \ via HTTP on the callbackReference URI, as specified in ETSI GS\_MEC\
            \ 009 [4], clause 6.12a."
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Boolean
        subscriptionType:
          description: Shall be set to "UserDistanceSubscription".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        trackingAccuracy:
          description: Number of meters of acceptable error in tracking distance.
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
      required:
      - checkImmediate
      - criteria
      - distance
      - monitoredAddress
      - subscriptionType
      - trackingAccuracy
      type: object
      x-etsi-notes: "NOTE 1:\tAt least one of callbackReference and websockNotifConfig\
        \ shall be provided by the service consumer. If both are provided, it is up\
        \ to location server to select an alternative and return only that alternative\
        \ in the response, as specified in ETSI GS MEC 009 [4], clause 6.12a.\nNOTE\
        \ 2:\tThis allows the client to recover from communication failures during\
        \ resource creation and therefore avoids duplicate subscription creation in\
        \ such situations. In case the element is present, the server shall not alter\
        \ its value, and shall provide it as part of the representation of this resource.\
        \ In case the element is not present, the server shall not generate it.\n\
        NOTE 3:\tAs specified in [6], clause 5.2.3.2."
      x-etsi-ref: 6.3.9
    DistanceCriteria:
      description: "An enumeration, defining the distance criteria between devices."
      enum:
      - AllWithinDistance
      - AnyWithinDistance
      - AllBeyondDistance
      - AnyBeyondDistance
      type: string
    UserDistanceNotification:
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        distanceEvent:
          $ref: '#/components/schemas/DistanceCriteria'
        monitoredUsers:
          $ref: '#/components/schemas/UserList'
        notificationType:
          description: Shall be set to "UserDistanceNotification".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        timeStamp:
          $ref: '#/components/schemas/TimeStamp'
      required:
      - _links
      - distanceEvent
      - monitoredUsers
      - notificationType
      type: object
      x-etsi-notes: "NOTE:\tAs specified in [6], clause 5.2.3.2."
      x-etsi-ref: 6.4.9
    UserLocationEventNotification:
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        accessPointId:
          description: "The identity of the access point.\nFor the events of \"ENTERING_AREA_EVENT\"\
            , it indicates the access point that the user is currently within. \n\
            For the event of \"LEAVING_AREA_EVENT\", it indicates the access point\
            \ that the user used to be within.\nSee note 2."
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        address:
          description: "Address of user (e.g. ‘sip’ URI, ‘tel’ URI, ‘acr’ URI)."
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
        civicInfo:
          $ref: '#/components/schemas/CivicAddress'
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        notificationType:
          description: Shall be set to "UserLocationEventNotification".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        relativeLocationInfo:
          $ref: '#/components/schemas/RelativeLocationInfo'
        timeStamp:
          $ref: '#/components/schemas/TimeStamp'
        userLocationEvent:
          $ref: '#/components/schemas/LocationEventType'
        zoneId:
          description: "The identity of the zone. \nFor the events of \"ENTERING_AREA_EVENT\"\
            , it is the zone that the user is currently within. \nFor the event of\
            \ \"LEAVING_AREA_EVENT\", it is the zone that the user used to be within.\n\
            See note 2."
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
      required:
      - _links
      - notificationType
      - userLocationEvent
      type: object
      x-etsi-notes: "NOTE 1:\tAs specified in [17], clause 6.1.6.2.14.\nNOTE 2:\t\
        As specified in [5], clause 5.2.2.7.\nNOTE 3:\tAt least one of these attributes\
        \ shall be present only when reportingLocationReq is set to TRUE in the UserLocationEventSubscription."
      x-etsi-ref: 6.4.4
    UserLocationPeriodicNotification:
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        accessPointId:
          description: "The identity of the access point that the user is currently\
            \ within. \nSee note 2."
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        address:
          description: "Address of user (e.g. ‘sip’ URI, ‘tel’ URI, ‘acr’ URI)."
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
        civicInfo:
          $ref: '#/components/schemas/CivicAddress'
        isFinalNotification:
          description: Shall be set to true if it is a final notification.
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Boolean
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        notificationType:
          description: Shall be set to "UserLocationPeriodicNotification".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        relativeLocationInfo:
          $ref: '#/components/schemas/RelativeLocationInfo'
        result:
          $ref: '#/components/schemas/NotificationResult'
        timeStamp:
          $ref: '#/components/schemas/TimeStamp'
        zoneId:
          description: "The identity of the zone that the user is currently within.\
            \ \nSee note 2."
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
      required:
      - _links
      - notificationType
      - result
      type: object
      x-etsi-notes: "NOTE 1:\tAs specified in [17], clause 6.1.6.2.14.\nNOTE 2:\t\
        As specified in [5], clause 5.2.2.7.\nNOTE 3:\tIf the result is SUCCESS, at\
        \ least one of locationInfo, civicInfo and relativeLocationInfo shall be present."
      x-etsi-ref: 6.4.5
    ZoneLocationEventNotification:
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        address:
          description: "Address of user (e.g. ‘sip’ URI, ‘tel’ URI, ‘acr’ URI)."
          format: uri
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uri
        notificationType:
          description: Shall be set to "ZoneLocationEventNotification".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        timeStamp:
          $ref: '#/components/schemas/TimeStamp'
        userLocationEvent:
          $ref: '#/components/schemas/LocationEventType'
        zoneId:
          description: 'The identity of the zone. '
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - _links
      - address
      - notificationType
      - userLocationEvent
      - zoneId
      type: object
      x-etsi-ref: 6.4.6
    UserAreaNotification:
      example:
        timeStamp:
          seconds: 5
          nanoSeconds: 1
        locationInfo:
          altitude: 5.962134
          orientationMajorAxis: 4
          shape: 7
          confidence: 5
          latitude:
          - 9.301444243932576
          - 9.301444243932576
          offsetAngle: 2
          accuracy: 0
          includedAngle: 2
          velocity:
            verticalUncertainty: 4
            horizontalSpeed: 1
            bearing: 1
            uncertainty: 6
            verticalSpeed: 1
            velocityType: 7
          accuracySemiMinor: 1
          innerRadius: 7
          accuracyAltitude: 6
          uncertaintyRadius: 1
          longitude:
          - 3.616076749251911
          - 3.616076749251911
        address: https://openapi-generator.tech
        userLocationEvent: ENTERING_AREA_EVENT
        _links:
          self:
            href: https://openapi-generator.tech
        notificationType: notificationType
        civicInfo:
          POBOX: POBOX
          usageRules: usageRules
          country: country
          PRD: PRD
          PLC: PLC
          HNO: HNO
          PRM: PRM
          HNS: HNS
          FLR: FLR
          A1: A1
          A2: A2
          A3: A3
          A4: A4
          STS: STS
          A5: A5
          A6: A6
          RDSEC: RDSEC
          providedBy: providedBy
          LOC: LOC
          UNIT: UNIT
          SEAT: SEAT
          POD: POD
          RDBR: RDBR
          method: method
          LMK: LMK
          POM: POM
          ADDCODE: ADDCODE
          RD: RD
          PC: PC
          PCN: PCN
          NAM: NAM
          BLD: BLD
          ROOM: ROOM
          RDSUBBR: RDSUBBR
        relativeLocationInfo:
          mapInfo:
            origin:
              altitude: 6.6835623
              latitude: 8.762042
              longitude: 9.018348
            mapId: mapId
            ancillaryMapInfo: "{}"
          X: 5.025005
          "Y": 9.965781
          Z: 9.36931
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        address:
          description: "Address of user (e.g. ‘sip’ URI, ‘tel’ URI, ‘acr’ URI)."
          format: uri
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uri
        civicInfo:
          $ref: '#/components/schemas/CivicAddress'
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        notificationType:
          description: Shall be set to "UserAreaNotification".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        relativeLocationInfo:
          $ref: '#/components/schemas/RelativeLocationInfo'
        timeStamp:
          $ref: '#/components/schemas/TimeStamp'
        userLocationEvent:
          $ref: '#/components/schemas/LocationEventType'
      required:
      - _links
      - address
      - notificationType
      - userLocationEvent
      type: object
      x-etsi-notes: "NOTE 1:\tAs specified in [17], clause 6.1.6.2.14.\nNOTE 2:\t\
        At least one of these attributes shall be present only when reportingLocationReq\
        \ is set to TRUE in the UserAreaSubscription."
      x-etsi-ref: 6.4.8
    AreaInfo:
      example:
        shape: 5
        radius: 1
        points:
        - latitude: 0.8008282
          longitude: 6.0274563
        - latitude: 0.8008282
          longitude: 6.0274563
      properties:
        points:
          description: Shall include one point if the shape is CIRCLE. Shall include
            3-15 points if the shape is POLYGON.
          items:
            $ref: '#/components/schemas/Point'
          minItems: 1
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Array(Point)
        radius:
          description: Shall be present if the shape is CIRCLE.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        shape:
          description: "The shape of the area monitored: 1 = CIRCLE. 2 = POLYGON"
          enum:
          - 1
          - 2
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Enum(inlined)
      required:
      - points
      - shape
      type: object
      x-etsi-ref: 6.5.7
    Point:
      example:
        latitude: 0.8008282
        longitude: 6.0274563
      properties:
        latitude:
          description: "Location latitude, expressed in the range -90° to +90°."
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
        longitude:
          description: "Location longitude, expressed in the range -180° to +180°."
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
      required:
      - latitude
      - longitude
      type: object
      x-etsi-ref: 6.5.8
    ReportingCtrl:
      example:
        maximumCount: 5
        minimumInterval: 7
        maximumFrequency: 2
      properties:
        maximumCount:
          description: "Maximum number of notifications. For no maximum, either do\
            \ not include this element or specify a value of zero. Default value is\
            \ 0."
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        maximumFrequency:
          description: Maximum frequency (in seconds) of notifications per subscription.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        minimumInterval:
          description: Minimum interval between reports in case frequently reporting.
            Unit is second.
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
      type: object
      x-etsi-ref: 6.5.6
    _links:
      description: Hyperlink related to the resource. This shall be only included
        in the HTTP responses and in HTTP PUT requests.
      example:
        self:
          href: https://openapi-generator.tech
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
      required:
      - self
      type: object
      x-etsi-mec-cardinality: 0..1
      x-etsi-mec-origin-type: Structure (inlined)
    UserEventPara:
      example:
        reportingLocationReq: true
        accessPointList:
        - accessPointList
        - accessPointList
        zoneId: zoneId
        occurrenceInfo: ONE_TIME_EVENT
      properties:
        accessPointList:
          description: One or more access points forming a monitoring area that could
            be any shape. See note 1.
          items:
            type: string
          minItems: 0
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Array(String)
        occurrenceInfo:
          $ref: '#/components/schemas/OccurrenceInfo'
        reportingLocationReq:
          description: This IE shall be set to true if a location estimate is required
            for each event report.
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: boolean
        zoneId:
          description: Identifier of zone (e.g. zone001) to monitor. See note 1.
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
      type: object
      x-etsi-notes: "NOTE 1:\tOnly one of accessPointList and zoneId may be present.\n\
        NOTE 2:\tAs specified in [17], clause 6.1.6.3.16."
      x-etsi-ref: 6.5.5
    WebsockNotifConfig:
      example:
        requestWebsocketUri: true
        websocketUri: https://openapi-generator.tech
      properties:
        requestWebsocketUri:
          description: Set to true by the service consumer to indicate that Websocket
            delivery is requested.
          type: boolean
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Boolean
        websocketUri:
          description: Set by location server to indicate to the service consumer
            the Websocket URI to be used for delivering notifications.
          format: uri
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uri
      type: object
      x-etsi-ref: 6.5.4
    TestNotification:
      properties:
        _links:
          $ref: '#/components/schemas/_links'
        notificationType:
          description: Shall be set to "TestNotification".
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - _links
      - notificationType
      type: object
      x-etsi-ref: 6.4.3
    LocationEventType:
      description: This type represents specified event types for UE location report.
      enum:
      - ENTERING_AREA_EVENT
      - LEAVING_AREA_EVENT
      type: string
    NotificationResult:
      description: This enumeration represents the result of a localization associated
        with a notification
      enum:
      - SUCCESS
      - ABNORMAL
      type: string
    OccurrenceInfo:
      description: The enumeration OccurrenceInfo indicates whether event reporting
        is one time.
      enum:
      - ONE_TIME_EVENT
      - MULTIPLE_TIME_EVENT
      type: string
    CivicAddress:
      description: Indicates a Civic address
      example:
        POBOX: POBOX
        usageRules: usageRules
        country: country
        PRD: PRD
        PLC: PLC
        HNO: HNO
        PRM: PRM
        HNS: HNS
        FLR: FLR
        A1: A1
        A2: A2
        A3: A3
        A4: A4
        STS: STS
        A5: A5
        A6: A6
        RDSEC: RDSEC
        providedBy: providedBy
        LOC: LOC
        UNIT: UNIT
        SEAT: SEAT
        POD: POD
        RDBR: RDBR
        method: method
        LMK: LMK
        POM: POM
        ADDCODE: ADDCODE
        RD: RD
        PC: PC
        PCN: PCN
        NAM: NAM
        BLD: BLD
        ROOM: ROOM
        RDSUBBR: RDSUBBR
      properties:
        country:
          description: "The two-letter ISO 3166 country code in capital ASCII letters,\
            \ e.g., DE or US"
          type: string
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: String
        A1:
          description: "National subdivisions (state, canton, region, province, prefecture)"
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        A2:
          description: "County, parish, gun (JP), district (IN)"
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        A3:
          description: "City, township, shi (JP)"
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        A4:
          description: "City division, borough, city district, ward, chou (JP)"
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        A5:
          description: "Neighbourhood, block"
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        A6:
          description: Group of streets below the neighbourhood level
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        PRD:
          description: Leading street direction
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        POD:
          description: Trailing street suffix
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        STS:
          description: Street suffix or type
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        HNO:
          description: House number
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        HNS:
          description: House number suffix
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        LMK:
          description: Landmark or vanity address
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        LOC:
          description: Additional location information
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        NAM:
          description: Name (residence and office occupant)
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        PC:
          description: Postal/zip code
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        BLD:
          description: Building (structure)
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        UNIT:
          description: "Unit (apartment, suite)"
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        FLR:
          description: Floor
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        ROOM:
          description: Room
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        PLC:
          description: Place-type
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        PCN:
          description: Postal community name
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        POBOX:
          description: Post office box (P.O. box)
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        ADDCODE:
          description: Additional code
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        SEAT:
          description: "Seat (desk, cubicle, workstation)"
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        RD:
          description: Primary road or street
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        RDSEC:
          description: Road clause
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        RDBR:
          description: Road branch
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        RDSUBBR:
          description: Road sub-branch
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        PRM:
          description: Road pre-modifier
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        POM:
          description: Road post-modifier
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        usageRules:
          description: "When present, this IE shall carry the value of \"usagerules\"\
            \ Element of the PIDL-LO XML document, with UTF-8 encoding."
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        method:
          description: "When present, this IE shall contain the method token, carried\
            \ by the \"method\" Element of the PIDLLO XML document."
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        providedBy:
          description: "When present, this IE shall carry the value of \"provided-by\"\
            \ Element of the PIDL-LO XML document, with UTF-8 encoding."
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
      required:
      - country
      type: object
    distanceGET_location_parameter:
      properties:
        latitude:
          description: "Location latitude, expressed in the range -90° to +90°."
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
        longitude:
          description: "Location longitude, expressed in the range -180° to +180°."
          format: float
          type: number
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Float
      type: object
    distanceGET_200_response:
      example:
        terminalDistance:
          distance: 6
          accuracy: 0
          timestamp:
            seconds: 5
            nanoSeconds: 1
      properties:
        terminalDistance:
          $ref: '#/components/schemas/TerminalDistance'
      type: object
    usersGET_200_response:
      example:
        userList:
          resourceURL: resourceURL
          user:
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444243932576
              - 9.301444243932576
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.616076749251911
              - 3.616076749251911
            address: https://openapi-generator.tech
            resourceURL: resourceURL
            AccessPointId: AccessPointId
            zoneId: zoneId
            ancillaryInfo: ancillaryInfo
            civicInfo:
              POBOX: POBOX
              usageRules: usageRules
              country: country
              PRD: PRD
              PLC: PLC
              HNO: HNO
              PRM: PRM
              HNS: HNS
              FLR: FLR
              A1: A1
              A2: A2
              A3: A3
              A4: A4
              STS: STS
              A5: A5
              A6: A6
              RDSEC: RDSEC
              providedBy: providedBy
              LOC: LOC
              UNIT: UNIT
              SEAT: SEAT
              POD: POD
              RDBR: RDBR
              method: method
              LMK: LMK
              POM: POM
              ADDCODE: ADDCODE
              RD: RD
              PC: PC
              PCN: PCN
              NAM: NAM
              BLD: BLD
              ROOM: ROOM
              RDSUBBR: RDSUBBR
            relativeLocationInfo:
              mapInfo:
                origin:
                  altitude: 6.6835623
                  latitude: 8.762042
                  longitude: 9.018348
                mapId: mapId
                ancillaryMapInfo: "{}"
              X: 5.025005
              "Y": 9.965781
              Z: 9.36931
            timestamp:
              seconds: 5
              nanoSeconds: 1
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444243932576
              - 9.301444243932576
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.616076749251911
              - 3.616076749251911
            address: https://openapi-generator.tech
            resourceURL: resourceURL
            AccessPointId: AccessPointId
            zoneId: zoneId
            ancillaryInfo: ancillaryInfo
            civicInfo:
              POBOX: POBOX
              usageRules: usageRules
              country: country
              PRD: PRD
              PLC: PLC
              HNO: HNO
              PRM: PRM
              HNS: HNS
              FLR: FLR
              A1: A1
              A2: A2
              A3: A3
              A4: A4
              STS: STS
              A5: A5
              A6: A6
              RDSEC: RDSEC
              providedBy: providedBy
              LOC: LOC
              UNIT: UNIT
              SEAT: SEAT
              POD: POD
              RDBR: RDBR
              method: method
              LMK: LMK
              POM: POM
              ADDCODE: ADDCODE
              RD: RD
              PC: PC
              PCN: PCN
              NAM: NAM
              BLD: BLD
              ROOM: ROOM
              RDSUBBR: RDSUBBR
            relativeLocationInfo:
              mapInfo:
                origin:
                  altitude: 6.6835623
                  latitude: 8.762042
                  longitude: 9.018348
                mapId: mapId
                ancillaryMapInfo: "{}"
              X: 5.025005
              "Y": 9.965781
              Z: 9.36931
            timestamp:
              seconds: 5
              nanoSeconds: 1
      properties:
        userList:
          $ref: '#/components/schemas/UserList'
      type: object
    zonesGET_200_response:
      example:
        zoneList:
          resourceURL: resourceURL
          zone:
          - resourceURL: resourceURL
            numberOfUsers: 1
            zoneId: zoneId
            numberOfAccessPoints: 0
            numberOfUnserviceableAccessPoints: 6
          - resourceURL: resourceURL
            numberOfUsers: 1
            zoneId: zoneId
            numberOfAccessPoints: 0
            numberOfUnserviceableAccessPoints: 6
      properties:
        zoneList:
          $ref: '#/components/schemas/ZoneList'
      type: object
    zoneGetById_200_response:
      example:
        zoneInfo:
          resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
      properties:
        zoneInfo:
          $ref: '#/components/schemas/ZoneInfo'
      type: object
    accessPointsGET_200_response:
      example:
        accessPointList:
          resourceURL: resourceURL
          zoneId: zoneId
          accessPoint:
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444243932576
              - 9.301444243932576
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.616076749251911
              - 3.616076749251911
            operationStatus: Serviceable
            resourceURL: resourceURL
            numberOfUsers: 0
            timezone: timezone
            accessPointId: accessPointId
            interestRealm: interestRealm
            connectionType: LTE
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444243932576
              - 9.301444243932576
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.616076749251911
              - 3.616076749251911
            operationStatus: Serviceable
            resourceURL: resourceURL
            numberOfUsers: 0
            timezone: timezone
            accessPointId: accessPointId
            interestRealm: interestRealm
            connectionType: LTE
      properties:
        accessPointList:
          $ref: '#/components/schemas/AccessPointList'
      type: object
    accessPointGetById_200_response:
      example:
        accessPointInfo:
          locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444243932576
            - 9.301444243932576
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.616076749251911
            - 3.616076749251911
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: LTE
      properties:
        accessPointInfo:
          $ref: '#/components/schemas/AccessPointInfo'
      type: object
    areaSubListGET_200_response:
      example:
        notificationSubscriptionList:
          resourceURL:
            href: https://openapi-generator.tech
          subscription:
          - subscriptionType: subscriptionType
            href: https://openapi-generator.tech
          - subscriptionType: subscriptionType
            href: https://openapi-generator.tech
      properties:
        notificationSubscriptionList:
          $ref: '#/components/schemas/NotificationSubscriptionList'
      required:
      - notificationSubscriptionList
      type: object
    areaSubPOST_request:
      example:
        userAreaSubscription:
          areaDefine:
            shape: 5
            radius: 1
            points:
            - latitude: 0.8008282
              longitude: 6.0274563
            - latitude: 0.8008282
              longitude: 6.0274563
          trackingAccuracy: 9.301444
          reportingLocationReq: true
          _links:
            self:
              href: https://openapi-generator.tech
          callbackReference: https://openapi-generator.tech
          locationEventCriteria:
          - ENTERING_AREA_EVENT
          - ENTERING_AREA_EVENT
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
          subscriptionType: subscriptionType
          addressList:
          - addressList
          - addressList
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          reportingCtrl:
            maximumCount: 5
            minimumInterval: 7
            maximumFrequency: 2
      properties:
        userAreaSubscription:
          $ref: '#/components/schemas/UserAreaSubscription'
      type: object
    areaNotificationPOST_request:
      example:
        userAreaNotification:
          timeStamp:
            seconds: 5
            nanoSeconds: 1
          locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444243932576
            - 9.301444243932576
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.616076749251911
            - 3.616076749251911
          address: https://openapi-generator.tech
          userLocationEvent: ENTERING_AREA_EVENT
          _links:
            self:
              href: https://openapi-generator.tech
          notificationType: notificationType
          civicInfo:
            POBOX: POBOX
            usageRules: usageRules
            country: country
            PRD: PRD
            PLC: PLC
            HNO: HNO
            PRM: PRM
            HNS: HNS
            FLR: FLR
            A1: A1
            A2: A2
            A3: A3
            A4: A4
            STS: STS
            A5: A5
            A6: A6
            RDSEC: RDSEC
            providedBy: providedBy
            LOC: LOC
            UNIT: UNIT
            SEAT: SEAT
            POD: POD
            RDBR: RDBR
            method: method
            LMK: LMK
            POM: POM
            ADDCODE: ADDCODE
            RD: RD
            PC: PC
            PCN: PCN
            NAM: NAM
            BLD: BLD
            ROOM: ROOM
            RDSUBBR: RDSUBBR
          relativeLocationInfo:
            mapInfo:
              origin:
                altitude: 6.6835623
                latitude: 8.762042
                longitude: 9.018348
              mapId: mapId
              ancillaryMapInfo: "{}"
            X: 5.025005
            "Y": 9.965781
            Z: 9.36931
      properties:
        userAreaNotification:
          $ref: '#/components/schemas/UserAreaNotification'
      type: object
    areaSubGET_200_response:
      example:
        userAreaNotification:
          timeStamp:
            seconds: 5
            nanoSeconds: 1
          locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444243932576
            - 9.301444243932576
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.616076749251911
            - 3.616076749251911
          address: https://openapi-generator.tech
          userLocationEvent: ENTERING_AREA_EVENT
          _links:
            self:
              href: https://openapi-generator.tech
          notificationType: notificationType
          civicInfo:
            POBOX: POBOX
            usageRules: usageRules
            country: country
            PRD: PRD
            PLC: PLC
            HNO: HNO
            PRM: PRM
            HNS: HNS
            FLR: FLR
            A1: A1
            A2: A2
            A3: A3
            A4: A4
            STS: STS
            A5: A5
            A6: A6
            RDSEC: RDSEC
            providedBy: providedBy
            LOC: LOC
            UNIT: UNIT
            SEAT: SEAT
            POD: POD
            RDBR: RDBR
            method: method
            LMK: LMK
            POM: POM
            ADDCODE: ADDCODE
            RD: RD
            PC: PC
            PCN: PCN
            NAM: NAM
            BLD: BLD
            ROOM: ROOM
            RDSUBBR: RDSUBBR
          relativeLocationInfo:
            mapInfo:
              origin:
                altitude: 6.6835623
                latitude: 8.762042
                longitude: 9.018348
              mapId: mapId
              ancillaryMapInfo: "{}"
            X: 5.025005
            "Y": 9.965781
            Z: 9.36931
      properties:
        userAreaNotification:
          $ref: '#/components/schemas/UserAreaNotification'
      required:
      - userAreaSubscription
      type: object
    distanceSubPOST_request:
      example:
        userDistanceSubscription:
          trackingAccuracy: 6.0274563
          distance: 0.8008282
          _links:
            self:
              href: https://openapi-generator.tech
          callbackReference: https://openapi-generator.tech
          criteria: AllWithinDistance
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          subscriptionType: subscriptionType
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          checkImmediate: true
          reportingCtrl:
            maximumCount: 5
            minimumInterval: 7
            maximumFrequency: 2
      properties:
        userDistanceSubscription:
          $ref: '#/components/schemas/UserDistanceSubscription'
      type: object
    distanceNotificationPOST_request:
      properties:
        userDistanceNotification:
          $ref: '#/components/schemas/UserDistanceNotification'
      type: object
    distanceSubGET_200_response:
      example:
        userDistanceSubscription:
          trackingAccuracy: 6.0274563
          distance: 0.8008282
          _links:
            self:
              href: https://openapi-generator.tech
          callbackReference: https://openapi-generator.tech
          criteria: AllWithinDistance
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          subscriptionType: subscriptionType
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          checkImmediate: true
          reportingCtrl:
            maximumCount: 5
            minimumInterval: 7
            maximumFrequency: 2
      properties:
        userDistanceSubscription:
          $ref: '#/components/schemas/UserDistanceSubscription'
      required:
      - UserDistanceSubscription
      type: object
    userSubPOST_request:
      example:
        userLocationPeriodicSubscription:
          periodicEventInfo:
            reportingInterval: 6.027456183070403
            reportingAmount: 0.8008281904610115
          address: https://openapi-generator.tech
          _links:
            self:
              href: https://openapi-generator.tech
          subscriptionType: subscriptionType
          callbackReference: https://openapi-generator.tech
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
        userLocationEventSubscription:
          userEventPara:
            reportingLocationReq: true
            accessPointList:
            - accessPointList
            - accessPointList
            zoneId: zoneId
            occurrenceInfo: ONE_TIME_EVENT
          address: https://openapi-generator.tech
          _links:
            self:
              href: https://openapi-generator.tech
          subscriptionType: subscriptionType
          callbackReference: https://openapi-generator.tech
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          locationEventCriteria:
          - ENTERING_AREA_EVENT
          - ENTERING_AREA_EVENT
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
      properties:
        userLocationEventSubscription:
          $ref: '#/components/schemas/UserLocationEventSubscription'
        userLocationPeriodicSubscription:
          $ref: '#/components/schemas/UserLocationPeriodicSubscription'
      type: object
    userNotificationPOST_request:
      properties:
        userLocationEventNotification:
          $ref: '#/components/schemas/UserLocationEventNotification'
        userLocationPeriodicNotification:
          $ref: '#/components/schemas/UserLocationPeriodicNotification'
      type: object
    userSubGET_200_response:
      example:
        userLocationPeriodicSubscription:
          periodicEventInfo:
            reportingInterval: 6.027456183070403
            reportingAmount: 0.8008281904610115
          address: https://openapi-generator.tech
          _links:
            self:
              href: https://openapi-generator.tech
          subscriptionType: subscriptionType
          callbackReference: https://openapi-generator.tech
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
        userLocationEventSubscription:
          userEventPara:
            reportingLocationReq: true
            accessPointList:
            - accessPointList
            - accessPointList
            zoneId: zoneId
            occurrenceInfo: ONE_TIME_EVENT
          address: https://openapi-generator.tech
          _links:
            self:
              href: https://openapi-generator.tech
          subscriptionType: subscriptionType
          callbackReference: https://openapi-generator.tech
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          locationEventCriteria:
          - ENTERING_AREA_EVENT
          - ENTERING_AREA_EVENT
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
      properties:
        userLocationEventSubscription:
          $ref: '#/components/schemas/UserLocationEventSubscription'
        userLocationPeriodicSubscription:
          $ref: '#/components/schemas/UserLocationPeriodicSubscription'
      required:
      - UserLocationEventSubscription
      type: object
    zoneSubPOST_request:
      example:
        zoneStatusSubscription:
          lowerNumberOfUsersZoneThreshold: 6
          operationStatus:
          - Serviceable
          - Serviceable
          _links:
            self:
              href: https://openapi-generator.tech
          callbackReference: https://openapi-generator.tech
          lowerNumberOfUsersAPThreshold: 0
          upperNumberOfUsersAPThreshold: 1
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
          subscriptionType: subscriptionType
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          upperNumberOfUsersZoneThreshold: 5
          reportingCtrl:
            maximumCount: 5
            minimumInterval: 7
            maximumFrequency: 2
        zoneLocationEventSubscription:
          _links:
            self:
              href: https://openapi-generator.tech
          subscriptionType: subscriptionType
          addressList:
          - addressList
          - addressList
          callbackReference: https://openapi-generator.tech
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          locationEventCriteria:
          - ENTERING_AREA_EVENT
          - ENTERING_AREA_EVENT
          zoneId: zoneId
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
          reportingCtrl:
            maximumCount: 5
            minimumInterval: 7
            maximumFrequency: 2
      properties:
        zoneLocationEventSubscription:
          $ref: '#/components/schemas/ZoneLocationEventSubscription'
        zoneStatusSubscription:
          $ref: '#/components/schemas/ZoneStatusSubscription'
      type: object
    zoneNotificationPOST_request:
      properties:
        zoneLocationEventNotification:
          $ref: '#/components/schemas/ZoneLocationEventNotification'
        zoneStatusNotification:
          $ref: '#/components/schemas/ZoneStatusNotification'
      type: object
    zoneSubGET_200_response:
      example:
        zoneStatusSubscription:
          lowerNumberOfUsersZoneThreshold: 6
          operationStatus:
          - Serviceable
          - Serviceable
          _links:
            self:
              href: https://openapi-generator.tech
          callbackReference: https://openapi-generator.tech
          lowerNumberOfUsersAPThreshold: 0
          upperNumberOfUsersAPThreshold: 1
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
          subscriptionType: subscriptionType
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          upperNumberOfUsersZoneThreshold: 5
          reportingCtrl:
            maximumCount: 5
            minimumInterval: 7
            maximumFrequency: 2
        zoneLocationEventSubscription:
          _links:
            self:
              href: https://openapi-generator.tech
          subscriptionType: subscriptionType
          addressList:
          - addressList
          - addressList
          callbackReference: https://openapi-generator.tech
          expiryDeadline:
            seconds: 5
            nanoSeconds: 1
          clientCorrelator: clientCorrelator
          locationEventCriteria:
          - ENTERING_AREA_EVENT
          - ENTERING_AREA_EVENT
          zoneId: zoneId
          websockNotifConfig:
            requestWebsocketUri: true
            websocketUri: https://openapi-generator.tech
          requestTestNotification: true
          reportingCtrl:
            maximumCount: 5
            minimumInterval: 7
            maximumFrequency: 2
      properties:
        zoneLocationEventSubscription:
          $ref: '#/components/schemas/ZoneLocationEventSubscription'
        zoneStatusSubscription:
          $ref: '#/components/schemas/ZoneStatusSubscription'
      required:
      - zoneLocationEventSubscription
      - zoneStatusSubscription
      type: object
