/*
 * ETSI GS MEC 013 - Location API
 *
 * The ETSI MEC ISG MEC013 Location API described using OpenAPI.
 *
 * API version: 3.1.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package location-api

// CivicAddress - Indicates a Civic address
type CivicAddress struct {

	// The two-letter ISO 3166 country code in capital ASCII letters, e.g., DE or US
	Country string `json:"country"`

	// National subdivisions (state, canton, region, province, prefecture)
	A1 string `json:"A1,omitempty"`

	// County, parish, gun (JP), district (IN)
	A2 string `json:"A2,omitempty"`

	// City, township, shi (JP)
	A3 string `json:"A3,omitempty"`

	// City division, borough, city district, ward, chou (JP)
	A4 string `json:"A4,omitempty"`

	// Neighbourhood, block
	A5 string `json:"A5,omitempty"`

	// Group of streets below the neighbourhood level
	A6 string `json:"A6,omitempty"`

	// Leading street direction
	PRD string `json:"PRD,omitempty"`

	// Trailing street suffix
	POD string `json:"POD,omitempty"`

	// Street suffix or type
	STS string `json:"STS,omitempty"`

	// House number
	HNO string `json:"HNO,omitempty"`

	// House number suffix
	HNS string `json:"HNS,omitempty"`

	// Landmark or vanity address
	LMK string `json:"LMK,omitempty"`

	// Additional location information
	LOC string `json:"LOC,omitempty"`

	// Name (residence and office occupant)
	NAM string `json:"NAM,omitempty"`

	// Postal/zip code
	PC string `json:"PC,omitempty"`

	// Building (structure)
	BLD string `json:"BLD,omitempty"`

	// Unit (apartment, suite)
	UNIT string `json:"UNIT,omitempty"`

	// Floor
	FLR string `json:"FLR,omitempty"`

	// Room
	ROOM string `json:"ROOM,omitempty"`

	// Place-type
	PLC string `json:"PLC,omitempty"`

	// Postal community name
	PCN string `json:"PCN,omitempty"`

	// Post office box (P.O. box)
	POBOX string `json:"POBOX,omitempty"`

	// Additional code
	ADDCODE string `json:"ADDCODE,omitempty"`

	// Seat (desk, cubicle, workstation)
	SEAT string `json:"SEAT,omitempty"`

	// Primary road or street
	RD string `json:"RD,omitempty"`

	// Road clause
	RDSEC string `json:"RDSEC,omitempty"`

	// Road branch
	RDBR string `json:"RDBR,omitempty"`

	// Road sub-branch
	RDSUBBR string `json:"RDSUBBR,omitempty"`

	// Road pre-modifier
	PRM string `json:"PRM,omitempty"`

	// Road post-modifier
	POM string `json:"POM,omitempty"`

	// When present, this IE shall carry the value of \"usagerules\" Element of the PIDL-LO XML document, with UTF-8 encoding.
	UsageRules string `json:"usageRules,omitempty"`

	// When present, this IE shall contain the method token, carried by the \"method\" Element of the PIDLLO XML document.
	Method string `json:"method,omitempty"`

	// When present, this IE shall carry the value of \"provided-by\" Element of the PIDL-LO XML document, with UTF-8 encoding.
	ProvidedBy string `json:"providedBy,omitempty"`
}
